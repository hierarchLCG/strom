<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
		  http://www.springframework.org/schema/context  
		  http://www.springframework.org/schema/context/spring-context-4.0.xsd  
		  http://www.springframework.org/schema/tx 
		  http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 自动扫描(自动注入) -->  
    <context:component-scan base-package="service" /> 
    
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true"></property>
		<property name="locations" value="classpath:jdbc.properties"></property>
		<property name="fileEncoding" value="UTF-8"/>
	</bean>
	
	 
    
	<!-- <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="3000"/>
		<property name="logSlowSql" value="true"/>
		<property name="mergeSql" value="true"/>
	</bean> -->

	<!-- dataSource druid -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${jdbc.driver}"/>

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}"/>
		<property name="minIdle" value="${jdbc.pool.minIdle}"/>
		<property name="maxActive" value="${jdbc.pool.maxActive}"/>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.pool.maxWait}"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>

		<property name="validationQuery" value="${jdbc.testSql}"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="maxOpenPreparedStatements" value="100"/>

		<!-- 配置监控统计拦截的filters -->
		<!-- <property name="filters" value="slf4j"/>
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter"/>
			</list>
		</property> -->
	</bean>
	
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件 -->  
		<property name="typeAliasesPackage" value="com.wg.entity"/>
		<property name="configLocation" value="classpath:mybatis-config.xml" /> 
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property> 
	</bean>

	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" lazy-init="true">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean> -->

	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="dao"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>

